services:
  postgres:
    image: postgres:15-alpine
    container_name: its-done-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: its_done
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: its-done-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
      target: development
    container_name: its-done-backend
    ports:
      - "3002:3002"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/its_done
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-change-in-production}
      RESEND_API_KEY: ${RESEND_API_KEY:-}
      FROM_EMAIL: ${FROM_EMAIL:-noreply@itsdone.local}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      NODE_ENV: development
    depends_on:
      - postgres
      - redis
    volumes:
      # Sincroniza código fonte para hot reload
      - ./apps/backend/src:/app/src
      - ./apps/backend/prisma:/app/prisma
      - ./apps/backend/package.json:/app/package.json
      - ./apps/backend/tsconfig.json:/app/tsconfig.json
      - ./apps/backend/nest-cli.json:/app/nest-cli.json
      # Volume para uploads persistentes
      - ./apps/backend/uploads:/app/uploads
      # Exclui node_modules do volume (usa o do container)
      - /app/node_modules
    command: pnpm run start:dev

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
      target: development
    container_name: its-done-frontend
    ports:
      - "3000:3000"
    environment:
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-nextauth-secret-change-in-production}
      API_URL: http://backend:3002
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      NODE_ENV: development
    depends_on:
      - backend
    volumes:
      # Sincroniza código fonte para hot reload
      - ./apps/frontend/src:/app/src
      - ./apps/frontend/public:/app/public
      - ./apps/frontend/package.json:/app/package.json
      - ./apps/frontend/next.config.js:/app/next.config.js
      - ./apps/frontend/tsconfig.json:/app/tsconfig.json
      - ./apps/frontend/tailwind.config.ts:/app/tailwind.config.ts
      - ./apps/frontend/postcss.config.js:/app/postcss.config.js
      # Exclui node_modules e .next do volume (usa o do container)
      - /app/node_modules
      - /app/.next
    command: pnpm run dev

volumes:
  postgres_data:
  redis_data:
